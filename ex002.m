% ex001
% gr in R^{m-2} x R^2 is the convex hull of n points in R^m
% points are the columns of a m x n matrix which contains row-wise the digits of Eulers number 
% order cone is {0}

clear all;
m=12;
n=60;

% https://apod.nasa.gov/htmltest/gifcity/e.2mil
digits_str = ['2718281828459045235360287471352662497757247093699959574966' ...
                '967627724076630353547594571382178525166427427466391932003' ...
                '059921817413596629043572900334295260595630738132328627943' ...
                '490763233829880753195251019011573834187930702154089149934' ...
                '884167509244761460668082264800168477411853742345442437107' ...
                '539077744992069551702761838606261331384583000752044933826' ...
                '560297606737113200709328709127443747047230696977209310141' ...
                '692836819025515108657463772111252389784425056953696770785' ...
                '449969967946864454905987931636889230098793127736178215424' ...
                '999229576351482208269895193668033182528869398496465105820' ...
                '939239829488793320362509443117301238197068416140397019837' ...
                '679320683282376464804295311802328782509819455815301756717' ...
                '361332069811250996181881593041690351598888519345807273866' ...
                '738589422879228499892086805825749279610484198444363463244' ...
                '968487560233624827041978623209002160990235304369941849146' ...
                '314093431738143640546253152096183690888707016768396424378' ...
                '140592714563549061303107208510383750510115747704171898610' ...
                '687396965521267154688957035035402123407849819334321068170' ...
                '121005627880235193033224745015853904730419957777093503660' ...
                '416997329725088687696640355570716226844716256079882651787' ...
                '134195124665201030592123667719432527867539855894489697096' ...
                '409754591856956380236370162112047742722836489613422516445' ...
                '078182442352948636372141740238893441247963574370263755294' ...
                '448337998016125492278509257782562092622648326277933386566' ...
                '481627725164019105900491644998289315056604725802778631864' ...
                '155195653244258698294695930801915298721172556347546396447' ...
                '910145904090586298496791287406870504895858671747985466775' ...
                '757320568128845920541334053922000113786300945560688166740' ...
                '016984205580403363795376452030402432256613527836951177883' ...
                '863874439662532249850654995886234281899707733276171783928' ...
                '034946501434558897071942586398772754710962953741521115136' ...
                '835062752602326484728703920764310059584116612054529703023' ...
                '647254929666938115137322753645098889031360205724817658511' ...
                '806303644281231496550704751025446501172721155519486685080' ...
                '036853228183152196003735625279449515828418829478761085263' ...
                '981395599006737648292244375287184624578036192981971399147' ...
                '564488262603903381441823262515097482798777996437308997038' ...
                '886778227138360577297882412561190717663946507063304527954' ...
                '661855096666185664709711344474016070462621568071748187784' ...
                '437143698821855967095910259686200235371858874856965220005' ...
                '031173439207321139080329363447972735595527734907178379342' ...
                '163701205005451326383544000186323991490705479778056697853' ...
                '358048966906295119432473099587655236812859041383241160722' ...
                '602998330535370876138939639177957454016137223618789365260' ...
                '538155841587186925538606164779834025435128439612946035291' ...
                '332594279490433729908573158029095863138268329147711639633' ...
                '709240031689458636060645845925126994655724839186564209752' ...
                '685082307544254599376917041977780085362730941710163434907' ...
                '696423722294352366125572508814779223151974778060569672538' ...
                '017180776360346245927877846585065605078084421152969752189' ...
                '087401966090665180351650179250461950136658543663271254963' ...
                '990854914420001457476081930221206602433009641270489439039' ...
                '717719518069908699860663658323227870937650226014929101151' ...
                '717763594460202324930028040186772391028809786660565118326' ...
                '004368850881715723866984224220102495055188169480322100251' ...
                '542649463981287367765892768816359831247788652014117411091' ...
                '360116499507662907794364600585194199856016264790761532103' ...
                '872755712699251827568798930276176114616254935649590379804' ...
                '583818232336861201624373656984670378585330527583333793990' ...
                '752166069238053369887956513728559388349989470741618155012' ...
                '539706464817194670834819721448889879067650379590366967249'];

digits = arrayfun(@(x) str2double(x), digits_str);
digits = digits(1:m*n);
matrix = reshape(digits, n, m)'; 

rep.V=mod(matrix,3);
sop.gr=polyh(rep,'v');
sop.cone=origin(2);

diary('pics/output2.txt');
tic
res=so_solve(sop);
toc

disp(res.poi);
disp(res.dir);
opt.name="ex002_";
show(res,opt);
diary off









